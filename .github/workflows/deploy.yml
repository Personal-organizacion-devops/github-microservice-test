name: Deploy Lambda

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to (e.g., dev, prod)'
        required: true
        type: string
      region:
        description: 'AWS region for deployment'
        required: true
        type: string

jobs:
  deploy:
    name: Deploy Lambda Function
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Obtener código de fuente
        uses: actions/checkout@v4
      - name: Get short SHA
        id: short
        run: echo "short_sha=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_OUTPUT
      - name: Variables
        run: echo "REGION=${{ inputs.region }}" >> $GITHUB_ENV
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}
      - name: Update Lambda function
        env:
          AWS_REGION: ${{ inputs.region }}
          ECR_REGISTRY: 306157427831.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: ${{ github.event.repository.name }}
          IMAGE_TAG: ${{ steps.short.outputs.short_sha }}
          REGION: ${{ inputs.region }}
        run: |
          FUNCTION_NAME=lambda-ms-demo-dev
          SECRET_NAME=secret-ms-demo-dev

          # Actualizar variables de entorno
          aws lambda update-function-configuration \
            --function-name $FUNCTION_NAME \
            --environment "Variables={REGION=$REGION,SECRET_NAME=$SECRET_NAME}"

          echo "Esperando que termine la actualización de variables..."

          # Esperar hasta que la actualización sea exitosa
          while true; do
            STATUS=$(aws lambda get-function-configuration \
              --function-name $FUNCTION_NAME \
              --query LastUpdateStatus --output text)
            echo "Estado actual: $STATUS"

            if [ "$STATUS" == "Successful" ]; then
              echo "Actualización de variables completada."
              break
            elif [ "$STATUS" == "Failed" ]; then
              echo "Error: la actualización de variables falló."
              exit 1
            else
              echo "Esperando 5 segundos..."
              sleep 5
            fi
          done

          # Actualizar código (imagen container)
          aws lambda update-function-code \
            --function-name $FUNCTION_NAME \
            --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG